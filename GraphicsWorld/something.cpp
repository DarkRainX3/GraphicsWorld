#include <iostream>
#include <memory>
#include <vector>
#include <cstdlib> 
#include <ctime>
namespace ?? = std;
using ?? = int;
using ?? = void;
using ?? = time_t;
using ?? = bool;
#define ?? auto
#define ?? enum
#define ?? true
#define ?? false
#define ?? "evil"
#define ?? ??::make_shared
#define ?? virtual
#define ??? ??::cout
#define ?? ??::endl
template<class ??>
using ?? = ??::vector<??>;
template<class ??>
using ?? = ??::shared_ptr<??>;

?? ??{ ??, ??, ??, ?? };
?? ??() { return ??::rand(); }
?? ??() { return ??; }
struct ?? { ?? ?? ??() = 0; };
struct ?? : ?? { ?? ?? ??() { ??? << "\U0001F34A" << ??; }; };
struct ?? : ?? { ?? ?? ??() { ??? << "\U0001F349" << ??; }; };
struct ?? : ?? { ?? ?? ??() { ??? << "\U0001F349" << ??; }; };
struct ?? : ?? { ?? ?? ??() { ??? << "\U0001F353" << ??; }; };
struct ?? : ?? { ?? ?? ??() { ??? << "\U0001F34D" << ??; }; };
struct ?? : ?? { ?? ?? ??() { ??? << "\U0001F34E" << ??; }; };

?? main()
{
	if (??() == ??)
		??? << "??" << ??;

	??<??<??>> ?? = { ??<??>(), ??<??>(), ??<??>(), ??<??>(), ??<??>() };

	for (?? ?? : ??)
		??->??();

	return ??();
}